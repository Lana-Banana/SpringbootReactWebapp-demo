plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
//    id "com.github.node-gradle.node" version "2.2.4"
//    id "com.moowork.node" version "1.3.1"
}

group = 'dodt'
version = '0.0.1'
sourceCompatibility = '11'

repositories {
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://repo1.maven.org/maven2/"}
    maven { url "https://maven.springframework.org/release" }
    google()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

//node {
//    download = true
//    version = "12.18.3"
//    npmVersion = "6.13.4"
//}

apply plugin: 'java'
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"


// frontend build
// apply plugin: 'com.moowork.node'



//def frontendDir = "$projectDir/src/main/frontend/"
//task FrontNpmInstall (type: NpmTask) {
//    workingDir = file("${frontendDir}")
//    args = ["install"]
//}
//
//task NpmBuild (type: NpmTask) {
//    workingDir = file("${frontendDir}")
//    args = ["build"]
//}
//

task CopyFrontendOutput(type: Copy) {
    from 'frontend/build'
    into 'build/resources/main/static'
}

//NpmBuild.dependsOn(FrontNpmInstall)
//CopyFrontendOutput.dependsOn(NpmBuild)

compileJava.dependsOn(CopyFrontendOutput)
